{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/credit-card-type/index.js","src/js/controllers/credit-card-form.js","src/js/controllers/credit-card-list.js","src/js/load.js","src/js/main.js","src/js/services/form-service.js","src/js/services/handlebar-loader.js","src/js/services/smiles-server.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrcA,IAAI,IAAI,QAAQ,QAAR,CAAR;;AAEA,IAAI,iBAAiB,QAAQ,kBAAR,CAArB;;AAEA,IAAI,cAAc,QAAQ,6BAAR,CAAlB;AACA,IAAI,kBAAkB,Q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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar testOrder;\nvar types = {};\nvar customCards = {};\nvar VISA = 'visa';\nvar MASTERCARD = 'mastercard';\nvar AMERICAN_EXPRESS = 'american-express';\nvar DINERS_CLUB = 'diners-club';\nvar DISCOVER = 'discover';\nvar ELO = 'elo';\nvar JCB = 'jcb';\nvar UNIONPAY = 'unionpay';\nvar MAESTRO = 'maestro';\nvar MIR = 'mir';\nvar CVV = 'CVV';\nvar CID = 'CID';\nvar CVC = 'CVC';\nvar CVN = 'CVN';\nvar CVP2 = 'CVP2';\nvar CVE = 'CVE';\nvar ORIGINAL_TEST_ORDER = [\n  VISA,\n  MASTERCARD,\n  AMERICAN_EXPRESS,\n  DINERS_CLUB,\n  DISCOVER,\n  JCB,\n  UNIONPAY,\n  MAESTRO,\n  ELO,\n  MIR\n];\n\nfunction clone(originalObject) {\n  var dupe;\n\n  if (!originalObject) { return null; }\n\n  dupe = JSON.parse(JSON.stringify(originalObject));\n\n  return dupe;\n}\n\ntestOrder = clone(ORIGINAL_TEST_ORDER);\n\ntypes[VISA] = {\n  niceType: 'Visa',\n  type: VISA,\n  patterns: [\n    4\n  ],\n  gaps: [4, 8, 12],\n  lengths: [16, 18, 19],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\n\ntypes[MASTERCARD] = {\n  niceType: 'Mastercard',\n  type: MASTERCARD,\n  patterns: [\n    [51, 55],\n    [2221, 2229],\n    [223, 229],\n    [23, 26],\n    [270, 271],\n    2720\n  ],\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: CVC,\n    size: 3\n  }\n};\n\ntypes[AMERICAN_EXPRESS] = {\n  niceType: 'American Express',\n  type: AMERICAN_EXPRESS,\n  patterns: [\n    34,\n    37\n  ],\n  gaps: [4, 10],\n  lengths: [15],\n  code: {\n    name: CID,\n    size: 4\n  }\n};\n\ntypes[DINERS_CLUB] = {\n  niceType: 'Diners Club',\n  type: DINERS_CLUB,\n  patterns: [\n    [300, 305],\n    36,\n    38,\n    39\n  ],\n  gaps: [4, 10],\n  lengths: [14, 16, 19],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\n\ntypes[DISCOVER] = {\n  niceType: 'Discover',\n  type: DISCOVER,\n  patterns: [\n    6011,\n    [644, 649],\n    65\n  ],\n  gaps: [4, 8, 12],\n  lengths: [16, 19],\n  code: {\n    name: CID,\n    size: 3\n  }\n};\n\ntypes[JCB] = {\n  niceType: 'JCB',\n  type: JCB,\n  patterns: [\n    2131,\n    1800,\n    [3528, 3589]\n  ],\n  gaps: [4, 8, 12],\n  lengths: [16, 17, 18, 19],\n  code: {\n    name: CVV,\n    size: 3\n  }\n};\n\ntypes[UNIONPAY] = {\n  niceType: 'UnionPay',\n  type: UNIONPAY,\n  patterns: [\n    620,\n    [624, 626],\n    [62100, 62182],\n    [62184, 62187],\n    [62185, 62197],\n    [62200, 62205],\n    [622010, 622999],\n    622018,\n    [622019, 622999],\n    [62207, 62209],\n    [622126, 622925],\n    [623, 626],\n    6270,\n    6272,\n    6276,\n    [627700, 627779],\n    [627781, 627799],\n    [6282, 6289],\n    6291,\n    6292\n  ],\n  gaps: [4, 8, 12],\n  lengths: [16, 17, 18, 19],\n  code: {\n    name: CVN,\n    size: 3\n  }\n};\n\ntypes[MAESTRO] = {\n  niceType: 'Maestro',\n  type: MAESTRO,\n  patterns: [\n    493698,\n    [500000, 506698],\n    [506779, 508999],\n    [56, 59],\n    63,\n    67,\n    6\n  ],\n  gaps: [4, 8, 12],\n  lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n  code: {\n    name: CVC,\n    size: 3\n  }\n};\n\ntypes[ELO] = {\n  niceType: 'Elo',\n  type: ELO,\n  patterns: [\n    401178,\n    401179,\n    438935,\n    457631,\n    457632,\n    431274,\n    451416,\n    457393,\n    504175,\n    [506699, 506778],\n    [509000, 509999],\n    627780,\n    636297,\n    636368,\n    [650031, 650033],\n    [650035, 650051],\n    [650405, 650439],\n    [650485, 650538],\n    [650541, 650598],\n    [650700, 650718],\n    [650720, 650727],\n    [650901, 650978],\n    [651652, 651679],\n    [655000, 655019],\n    [655021, 655058]\n  ],\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: CVE,\n    size: 3\n  }\n};\n\ntypes[MIR] = {\n  niceType: 'Mir',\n  type: MIR,\n  patterns: [\n    [2200, 2204]\n  ],\n  gaps: [4, 8, 12],\n  lengths: [16, 17, 18, 19],\n  code: {\n    name: CVP2,\n    size: 3\n  }\n};\n\nfunction findType(type) {\n  return customCards[type] || types[type];\n}\n\nfunction isValidInputType(cardNumber) {\n  return typeof cardNumber === 'string' || cardNumber instanceof String;\n}\n\nfunction hasEnoughResultsToDetermineBestMatch(results) {\n  var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) {\n    return result.matchStrength;\n  }).length;\n\n  // if all possible results have a maxStrength property\n  // that means the card number is sufficiently long\n  // enough to determine conclusively what the type is\n  return numberOfResultsWithMaxStrengthProperty > 0 &&\n    numberOfResultsWithMaxStrengthProperty === results.length;\n}\n\nfunction findBestMatch(results) {\n  if (!hasEnoughResultsToDetermineBestMatch(results)) {\n    return;\n  }\n\n  return results.reduce(function (bestMatch, result) { // eslint-disable-line consistent-return\n    if (!bestMatch) {\n      return result;\n    }\n\n    // if the current best match pattern is less specific\n    // than this result, set the result as the new best match\n    if (bestMatch.matchStrength < result.matchStrength) {\n      return result;\n    }\n\n    return bestMatch;\n  });\n}\n\nfunction getAllCardTypes() {\n  return testOrder.map(function (type) {\n    return clone(findType(type));\n  });\n}\n\nfunction creditCardType(cardNumber) {\n  var bestMatch;\n  var results = [];\n\n  if (!isValidInputType(cardNumber)) {\n    return [];\n  }\n\n  if (cardNumber.length === 0) {\n    return getAllCardTypes();\n  }\n\n  testOrder.forEach(function (type) {\n    var cardConfiguration = findType(type);\n\n    loopOverCardPatterns(cardNumber, cardConfiguration, results);\n  });\n\n  bestMatch = findBestMatch(results);\n\n  if (bestMatch) {\n    return [bestMatch];\n  }\n\n  return results;\n}\n\nfunction loopOverCardPatterns(cardNumber, cardConfiguration, results) {\n  var i, pattern, patternLength, clonedCardConfiguration;\n\n  for (i = 0; i < cardConfiguration.patterns.length; i++) {\n    pattern = cardConfiguration.patterns[i];\n\n    if (!matches(cardNumber, pattern)) {\n      continue;\n    }\n\n    clonedCardConfiguration = clone(cardConfiguration);\n\n    if (Array.isArray(pattern)) {\n      patternLength = String(pattern[0]).length;\n    } else {\n      patternLength = String(pattern).length;\n    }\n\n    if (cardNumber.length >= patternLength) {\n      clonedCardConfiguration.matchStrength = patternLength;\n    }\n\n    results.push(clonedCardConfiguration);\n    break;\n  }\n}\n\nfunction matches(cardNumber, pattern) {\n  if (Array.isArray(pattern)) {\n    return matchesRange(cardNumber, pattern[0], pattern[1]);\n  }\n\n  return matchesPattern(cardNumber, pattern);\n}\n\nfunction matchesPattern(cardNumber, pattern) {\n  pattern = String(pattern);\n\n  return pattern.substring(0, cardNumber.length) === cardNumber.substring(0, pattern.length);\n}\n\n// Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\nfunction matchesRange(cardNumber, min, max) {\n  var maxLengthToCheck = String(min).length;\n  var substr = cardNumber.substr(0, maxLengthToCheck);\n  var integerRepresentationOfCardNumber = parseInt(substr, 10);\n\n  min = parseInt(String(min).substr(0, substr.length), 10);\n  max = parseInt(String(max).substr(0, substr.length), 10);\n\n  return integerRepresentationOfCardNumber >= min && integerRepresentationOfCardNumber <= max;\n}\n\ncreditCardType.getTypeInfo = function (type) {\n  return clone(findType(type));\n};\n\nfunction getCardPosition(name, ignoreErrorForNotExisting) {\n  var position = testOrder.indexOf(name);\n\n  if (!ignoreErrorForNotExisting && position === -1) {\n    throw new Error('\"' + name + '\" is not a supported card type.');\n  }\n\n  return position;\n}\n\ncreditCardType.removeCard = function (name) {\n  var position = getCardPosition(name);\n\n  testOrder.splice(position, 1);\n};\n\ncreditCardType.addCard = function (config) {\n  var existingCardPosition = getCardPosition(config.type, true);\n\n  customCards[config.type] = config;\n\n  if (existingCardPosition === -1) {\n    testOrder.push(config.type);\n  }\n};\n\ncreditCardType.updateCard = function (cardType, updates) {\n  var clonedCard;\n  var originalObject = customCards[cardType] || types[cardType];\n\n  if (!originalObject) {\n    throw new Error('\"' + cardType + '\" is not a recognized type. Use `addCard` instead.');\n  }\n\n  if (updates.type && originalObject.type !== updates.type) {\n    throw new Error('Cannot overwrite type parameter.');\n  }\n\n  clonedCard = clone(originalObject, true);\n\n  Object.keys(clonedCard).forEach(function (key) {\n    if (updates[key]) {\n      clonedCard[key] = updates[key];\n    }\n  });\n\n  customCards[clonedCard.type] = clonedCard;\n};\n\ncreditCardType.changeOrder = function (name, position) {\n  var currentPosition = getCardPosition(name);\n\n  testOrder.splice(currentPosition, 1);\n  testOrder.splice(position, 0, name);\n};\n\ncreditCardType.resetModifications = function () {\n  testOrder = clone(ORIGINAL_TEST_ORDER);\n  customCards = {};\n};\n\ncreditCardType.types = {\n  VISA: VISA,\n  MASTERCARD: MASTERCARD,\n  AMERICAN_EXPRESS: AMERICAN_EXPRESS,\n  DINERS_CLUB: DINERS_CLUB,\n  DISCOVER: DISCOVER,\n  JCB: JCB,\n  UNIONPAY: UNIONPAY,\n  MAESTRO: MAESTRO,\n  ELO: ELO,\n  MIR: MIR\n};\n\nmodule.exports = creditCardType;\n","var $ = require(\"jquery\");\r\n\r\nvar CreditCardType = require('credit-card-type');\r\n\r\nvar FormService = require(\"../services/form-service.js\");\r\nvar HandlebarLoader = require(\"../services/handlebar-loader\");\r\nvar SmilesServer = require(\"../services/smiles-server\");\r\n\r\nvar CreditCardFormInstance = null;\r\nmodule.exports = class CreditCardForm {\r\n  constructor() {\r\n    if(CreditCardFormInstance) return CreditCardFormInstance;\r\n    this.hb = null;\r\n    CreditCardFormInstance = this;\r\n  };\r\n\r\n  load(){\r\n    if(this.hb == null) {\r\n      this.hb = new HandlebarLoader()\r\n        .loadTemplate(\"sections/credit-card-form\", {});\r\n    }\r\n    this.hb.into(\"#checkout-step-1\")\r\n      .then(() => this.loadJQuery());\r\n  };\r\n\r\n  resetForm() {\r\n    $('#cardNumber').val('');\r\n    $('#cardHolderName').val('');\r\n    $('.cardCvc').val('');\r\n    $('input[name=member-card]').removeAttr('checked');\r\n    $('input[id^=secure-code-member-card]').val('');\r\n    $('.div-secure-code-member-card').hide();\r\n    $('#member-card-list li').removeClass('selected-one-click-card');\r\n  };\r\n\r\n  checkIsCardSmiles(cardNumber){\r\n    return ( cardNumber.indexOf('542661') === 0 || cardNumber.indexOf('545053') === 0\r\n          || cardNumber.indexOf('514895') === 0 || cardNumber.indexOf('510147') === 0\r\n          || cardNumber.indexOf('512427') === 0 || cardNumber.indexOf('514911') === 0 )\r\n  }\r\n\r\n  // input: credit card number (full or partial)\r\n  // output: credit card brand (or false for unknown)\r\n  detectCardType(number) {\r\n    let result = CreditCardType(number);\r\n    if(result.length != 1) return false;\r\n    let cc = result[0];\r\n    let brand = cc.type;\r\n    if(brand == \"mastercard\") {\r\n      brand = this.checkIsCardSmiles(number) ? \"mastercard_smiles\" : brand;\r\n    }\r\n    return brand;\r\n  }\r\n\r\n  loadJQuery() {\r\n    var formService = new FormService();\r\n    formService.setCardNumber('#cardNumber');\r\n    $('#back-to-member-card-list').on('click', () => {\r\n      this.resetForm();\r\n      var CreditCardList = require(\"./credit-card-list\");\r\n      new CreditCardList().load();\r\n    });\r\n    $('#cardNumber').on('keyup', (evt) => {\r\n      let elem = \"#\" + evt.target.id;\r\n      let val = $(elem).val();\r\n      let brand = this.detectCardType(val);\r\n      $('#smls-card-icon').attr('class', 'cards');\r\n      if( brand !== false ) {\r\n        $('#smls-card-icon').addClass(brand);\r\n      }\r\n    });\r\n  };\r\n\r\n};\r\n","var $ = require(\"jquery\");\r\n\r\nvar SmilesServer = require(\"../services/smiles-server\");\r\nvar HandlebarLoader = require(\"../services/handlebar-loader\");\r\n\r\n//var Installments = require(\"./installments.js\");\r\n\r\nvar CreditCardListInstance = null;\r\nmodule.exports = class CreditCardList {\r\n  constructor() {\r\n    if(CreditCardListInstance) return CreditCardListInstance;\r\n    this.creditCardList = [];\r\n    this.hb = null;\r\n    CreditCardListInstance = this;\r\n  };\r\n\r\n  load() {\r\n    if(this.creditCardList.lenght > 0) this.loadTemplate();\r\n    else this.reload();\r\n  };\r\n\r\n  processCreditCard(cc) {\r\n    return {\r\n      id: cc.id,\r\n      brand: cc.brand.toLowerCase(),\r\n      last4: String(cc.number).substr(-4),\r\n      active: (cc.main == true)\r\n    };\r\n  };\r\n  refreshCreditCards() {\r\n    let server = new SmilesServer();\r\n    return server.getUserInfo()\r\n      .then((data) => {\r\n        this.creditCardList = data.savedCreditCards.map(this.processCreditCard);\r\n      });\r\n  };\r\n  reload() {\r\n    this.refreshCreditCards().then(() => this.loadTemplate());\r\n  };\r\n\r\n  loadTemplate() {\r\n    if(this.hb == null) {\r\n      this.hb = new HandlebarLoader()\r\n        .loadTemplate(\"sections/credit-card-list\", { cards: this.creditCardList });\r\n    }\r\n    this.hb.into(\"#checkout-step-1\")\r\n      .then(() => this.loadJQuery());\r\n  };\r\n\r\n  selectCard(brand) {\r\n    console.info(\"selected: \", brand);\r\n//    new Installments().selectBrand(brand);\r\n  };\r\n\r\n  loadJQuery() {\r\n    $('input[name=member-card]').on('click', (evt) => {\r\n      let elem = \"#\" + evt.target.id;\r\n      let index = $(elem).data('index');\r\n      let brand = $(elem).data('brand');\r\n      $('.div-secure-code-member-card').hide();\r\n      $('#member-card-list li').removeClass('selected-one-click-card');\r\n      $(elem).closest('li').addClass('selected-one-click-card');\r\n      $('input[id^=secure-code-member-card]').val('');\r\n      if($(elem).is(':checked')){\r\n        $('#div-secure-code-member-card-' + index).show();\r\n      }\r\n      $(elem).closest('li').addClass('selected-one-click-card');\r\n      this.selectCard(brand);\r\n    });\r\n\r\n    $(\"#other-credit-card\").on('click', () => {\r\n      var AddCreditCard = require(\"./credit-card-form\");\r\n      new AddCreditCard().load()\r\n    });\r\n  };\r\n\r\n};\r\n","var HandlebarLoader = require(\"./services/handlebar-loader\");\r\n\r\nvar CreditCardList = require(\"./controllers/credit-card-list\");\r\n/*\r\nvar AddCreditCard = require(\"./controllers/add-credit-card\");\r\nvar Installment = require(\"./controllers/installments\");\r\n*/\r\n\r\n$(document).ready(() => {\r\n  let loader = new HandlebarLoader();\r\n  loader.loadTemplate(\"checkout\")\r\n    .into(\"#checkout-token-portlet\")\r\n    .then(() => {\r\n      // step 1:\r\n      new CreditCardList().load();\r\n      // step 2:\r\n//      new Installment().load();\r\n    });\r\n\r\n});\r\n","require(\"./load.js\");\r\n","var $ = require(\"jquery\");\r\n\r\nmodule.exports = class FormService {\r\n  constructor() { }\r\n\r\n  setNumberOnly(inputId) {\r\n    $(inputId).on('keydown', (evt) => {\r\n      var key = (evt.which) ? evt.which : event.keyCode\r\n      if( key >= 48 && key <= 57 || // numbers\r\n          key >= 96 && key <= 105 || // Numeric keypad\r\n          key == 8 || key == 9 || key == 13 || // Backspace and Tab and Enter\r\n          key == 35 || key == 36 || // Home and End\r\n          key == 37 || key == 39 || // left and right arrows\r\n          key == 46 || key == 45 // Del and Ins\r\n        ) return true;\r\n      else return false;\r\n    });\r\n  }\r\n\r\n  setCardNumber(inputId) {\r\n    this.setNumberOnly(inputId);\r\n    $(inputId).on('blur', () => {\r\n      $(inputId).attr('maxlength','19');\r\n      var cardNumber = $(inputId).val();\r\n      cardNumber = cardNumber.toString().replace(/[^0-9]/g, '');\r\n      if(cardNumber.length === 15){\r\n        cardNumber = cardNumber.toString().replace(/\\D/g,\"\");\r\n        cardNumber = cardNumber.toString().replace(/(\\d{4})(\\d)/,\"$1 $2\");\r\n        cardNumber = cardNumber.toString().replace(/(\\d{6})(\\d)/,\"$1 $2\");\r\n        cardNumber = cardNumber.toString().replace(/(\\d{6})(\\d)/,\"$1 $2\");\r\n        $(\".cardCVC\").attr('maxlength','4');\r\n      } else {\r\n        cardNumber = cardNumber.toString().replace(/\\D/g,\"\");\r\n        cardNumber = cardNumber.toString().replace(/(\\d{4})(\\d)/,\"$1 $2\");\r\n        cardNumber = cardNumber.toString().replace(/(\\d{4})(\\d)/,\"$1 $2\");\r\n        cardNumber = cardNumber.toString().replace(/(\\d{4})(\\d)/,\"$1 $2\");\r\n        cardNumber = cardNumber.toString().replace(/(\\d{4})(\\d)/,\"$1 $2\");\r\n        $(\".cardCVC\").attr('maxlength','3');\r\n      }\r\n      $(inputId).val(cardNumber);\r\n    });\r\n    $(inputId).on('focus', () => {\r\n      $(inputId).attr('maxlength','16');\r\n      var cardNumber = $(inputId).val();\r\n      cardNumber = cardNumber.toString().replace(/[^0-9]/g, '');\r\n      $(inputId).val(cardNumber);\r\n    });\r\n  }\r\n\r\n};\r\n","var $ = require(\"jquery\");\r\nvar Handlebars = require(\"../libs\").Handlebars;\r\n\r\nclass hbTemplate {\r\n  constructor(tname, data) {\r\n    this.name = tname;\r\n    this.data = data;\r\n    this.promise = null;\r\n    this.html = null;\r\n  }\r\n\r\n  start(p) {\r\n    this.promise = p;\r\n  };\r\n  getHtml(fn) { return this.promise.then(fn); };\r\n  append(div) { \r\n    return this.getHtml( h => $(div).append(h) ); \r\n  };\r\n  into (div) { \r\n    return this.getHtml( h => $(div).html(h) ); \r\n  };\r\n\r\n};\r\n\r\nvar HandlebarsInstance = null;\r\nmodule.exports = class HandlebarLoader {\r\n  constructor() {\r\n    if(HandlebarsInstance) return HandlebarsInstance;\r\n    this.templateLocal = \"../src/templates/\";\r\n    this.templateName;\r\n    this.handlebars = Handlebars;\r\n    HandlebarsInstance = this;\r\n  }\r\n\r\n  getTemplateFile(name) {\r\n    return this.templateLocal + name + \".hbs\";\r\n  };\r\n\r\n  createHbTemplate(t, data) {\r\n    return new hbTemplate(t, data);\r\n  }\r\n\r\n  loadTemplate(t, data) {\r\n    let templateObj = this.createHbTemplate(t, data);\r\n    templateObj.start(\r\n      new Promise((resolve, reject) => {\r\n        var xhttp = new XMLHttpRequest();\r\n        let templateFile = this.getTemplateFile(t);\r\n        xhttp.onreadystatechange = () => {\r\n          if(xhttp.readyState == 4) {\r\n            if (xhttp.status == 200) {\r\n              console.info(\"loaded template: \" + templateFile, data);\r\n              let templateScript = this.handlebars.compile(xhttp.responseText);\r\n              let html = templateScript(data);\r\n              resolve(html);\r\n            } else {\r\n              console.info(xhttp);\r\n              reject({\r\n                code: xhttp.status,\r\n                message: xhttp.statusText\r\n              });\r\n            }\r\n          }\r\n        };\r\n        xhttp.open(\"GET\", templateFile, true);\r\n        xhttp.send();\r\n      })\r\n    );\r\n    return templateObj;\r\n  };\r\n\r\n};\r\n","var $ = require(\"jquery\");\r\n\r\nmodule.exports = class SmilesServer {\r\n  constructor() {\r\n    this.host = \"http://localhost.smiles.com.br:8888\";\r\n    this.timeoutTime = 30000;\r\n    this.checkoutToken = \"\";\r\n  }\r\n\r\n  getHeaders () {\r\n    return {\r\n      \"Authorization\": \"Bearer \" + this.checkoutToken,\r\n      \"Channel\": \"APP\",\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n  }\r\n\r\n  get(url) {\r\n//    console.info(\"server-get: \" + url);\r\n    var defer = new Promise( (resolve, reject) => {\r\n      $.ajax({\r\n        url: url,\r\n        type: \"GET\",\r\n        dataType: \"json\",\r\n        headers: this.getHeaders(),\r\n        timeout: this.timeoutTime,\r\n        success: (data) => resolve(data),\r\n        error: (data) => reject(data)\r\n      });\r\n    });\r\n    return defer;\r\n  };\r\n  post (url, data) {\r\n//    console.info(\"server-post: \" + url, data);\r\n    var defer = new Promise( (resolve, reject) => {\r\n      $.ajax({\r\n        url: url,\r\n        type: \"POST\",\r\n        data: data,\r\n        dataType: \"json\",\r\n        headers: this.getHeaders(),\r\n        timeout: this.timeoutTime,\r\n        success: (data) => resolve(data),\r\n        error: (data) => reject(data)\r\n      });\r\n    });\r\n    return defer;\r\n  };\r\n\r\n  getTokenInfo() {\r\n    let url = this.host + \"/api/oauth/tokeninfo\";\r\n    let defer = new Promise((resolve, reject) => {\r\n      this.get(url)\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n    return defer;\r\n  };\r\n  getCheckout() {\r\n    let url = this.host + \"/api/checkout\";\r\n    return this.get(url);\r\n  };\r\n  getUserInfo() {\r\n    let url = this.host + \"/api/user\";\r\n//    return this.get(url);\r\n    return this.fakeCreditCards();\r\n  };\r\n\r\n  fakeCreditCards() {\r\n    return new Promise((resolve, reject) => {\r\n      let ccs = {\r\n        memberNumber: 7777,\r\n        savedCreditCards: [\r\n          {\r\n            id: 1,\r\n            brand: \"VISA\",\r\n            number: \"3015336500590223\",\r\n            main: true\r\n          }, {\r\n            id: 42,\r\n            brand: \"MASTERCARD\",\r\n            number: \"8315179137951987\",\r\n            main: false\r\n          }   \r\n        ]\r\n      };\r\n      resolve(ccs);\r\n    });\r\n  }\r\n\r\n};\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}